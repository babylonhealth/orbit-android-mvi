/*
 * Copyright 2019 Babylon Partners Limited
 *
 *  Licensed under the Apache License, Version 2.0 (the "License");
 *  you may not use this file except in compliance with the License.
 *  You may obtain a copy of the License at
 *
 *  http://www.apache.org/licenses/LICENSE-2.0
 *
 *  Unless required by applicable law or agreed to in writing, software
 *  distributed under the License is distributed on an "AS IS" BASIS,
 *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *  See the License for the specific language governing permissions and
 *  limitations under the License.
 */

apply plugin: 'maven-publish'

task sourcesJar(type: Jar) {
    if (project.plugins.findPlugin('com.android.library')) {
        from android.sourceSets.main.java.srcDirs
        classifier = 'sources'
    } else {
        classifier = 'sources'
        from sourceSets.main.allSource
    }
    artifacts {
        archives sourcesJar
    }
}

publishing {
    repositories {
        maven {
            name = 'public'
            url "TODO"
            credentials {
                username "TODO"
                password "TODO"
            }
        }
    }
    publications {
        lib(MavenPublication) {
            groupId "$sdkArtifactGroupId"
            artifactId project.name
            version "$orbitArtifactVersion"
            if (project.plugins.findPlugin('com.android.library')) {
                artifact "$buildDir/outputs/aar/${project.name}-release.aar"
            } else {
                artifact "$buildDir/libs/${project.name}.jar"
            }
            artifact sourcesJar
            if (project.tasks.findByName('releaseJavadocsJar')) {
                artifact releaseJavadocsJar {
                    classifier = 'javadoc'
                }
            }

            // Generate pom file so that the artifact dependencies can be fetched automatically.
            pom.withXml {
                def dependenciesNode = asNode().appendNode('dependencies')
                configurations.implementation.allDependencies.each { dependency ->
                    def dependencyNode = dependenciesNode.appendNode('dependency')
                    dependencyNode.appendNode('groupId', dependency.group)
                    dependencyNode.appendNode('artifactId', dependency.name)
                    dependencyNode.appendNode('version', dependency.version)
                }
            }
        }
    }
}
